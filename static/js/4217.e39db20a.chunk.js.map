{"version":3,"file":"static/js/4217.e39db20a.chunk.js","mappings":"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","sources":["components/ContactCard.js","userData.js","pages/AddSlide.js"],"sourcesContent":["import {\n  PhoneArrowDownLeftIcon,\n  PhoneIcon,\n  UsersIcon,\n} from \"@heroicons/react/24/solid\";\nimport { EnvelopeIcon, PencilSquareIcon } from \"@heroicons/react/24/outline\";\nimport React, { useRef, useState } from \"react\";\nimport { useInView, motion } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\nimport useReducer from \"../hook/reducerHook\";\nimport { Button, Cascader, Form, Input, Modal, message } from \"antd\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { cardVar } from \"../pages/profData\";\nimport TextArea from \"antd/es/input/TextArea\";\nexport function transformData(inputArray) {\n  return inputArray.map((theme, i) => ({\n    value: theme.label,\n    label: theme.label,\n    children: theme.prof.map((prof, j) => ({\n      value: `${prof.name}`,\n      label: ` ${prof.name}`,\n    })),\n  }));\n}\nfunction Contact({ delay }) {\n  const ref = useRef(null);\n  const [isModalOpen, setIsModalOpen] = useState({ visible: false });\n\n  const Data = transformData(cardVar);\n  const onFinish = (values) => {\n    console.log(\"Success:\", values);\n    addDoc(collection(db, \"requests\"), {\n      ...values,\n    }).then(() => {\n      message.success(\"Your request has been sent successfully!\");\n      setIsModalOpen({ ...isModalOpen, visible: false });\n    });\n  };\n  const isInView = useInView(ref, { once: true });\n  const { nav, setNav } = useReducer();\n  const navigate = useNavigate();\n  return (\n    <div ref={ref} className=\"w-[100%] group z-50 md:w-full md:h-auto\">\n      {isInView && (\n        <motion.div\n          initial={{ opacity: 0, translateY: -20 }}\n          animate={{\n            opacity: 1,\n            translateY: 0,\n            transition: { duration: 0.5, delay: 0.5 * delay },\n          }}\n          exit={{\n            opacity: 0,\n            translateY: 20,\n            transition: { duration: 0.5 },\n          }}\n          className=\"mt-8 md:mt-0 md:h-full bg-white  border border-gray-200 hover:border-gray-400 flex flex-col justify-between p-4 rounded-lg\"\n        >\n          <div className=\"flex flex-row mb-2 justify-between\">\n            <Modal\n              title=\"Request to meet\"\n              open={isModalOpen.visible}\n              onCancel={() =>\n                setIsModalOpen({ ...isModalOpen, visible: false })\n              }\n              okButtonProps={{ hidden: true }}\n              cancelButtonProps={{ hidden: true }}\n            >\n              <Form\n                name=\"basic\"\n                labelCol={{\n                  span: 8,\n                }}\n                wrapperCol={{\n                  span: 16,\n                }}\n                style={{\n                  maxWidth: 600,\n                }}\n                initialValues={{\n                  remember: true,\n                }}\n                onFinish={onFinish}\n                onFinishFailed={onFinish}\n                autoComplete=\"off\"\n              >\n                <h1 className=\"font-mont text-xs italic\">\n                  Select the faculty member you want to meet from the dropdown\n                </h1>\n                <Form.Item\n                  label=\"Faculty\"\n                  name=\"faculty\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input your email!\",\n                    },\n                  ]}\n                >\n                  <Cascader options={Data} />\n                </Form.Item>\n\n                <h1 className=\"font-mont text-xs italic\">\n                  Enter your email address and contact number so that our team\n                  can contact you to facilitate the meeting with Prof.{\" \"}\n                  <bold className=\"font-bold\">{isModalOpen.fac}</bold>.\n                </h1>\n                <Form.Item\n                  label=\"Email\"\n                  name=\"email\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input your email!\",\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Contact number\"\n                  name=\"number\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input your number!\",\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Message\"\n                  name=\"message\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input your message!\",\n                    },\n                  ]}\n                >\n                  <TextArea />\n                </Form.Item>\n                <Form.Item\n                  className=\"mt-4 -mb-4\"\n                  wrapperCol={{\n                    offset: 8,\n                    span: 16,\n                  }}\n                >\n                  <Button\n                    onClick={() =>\n                      setIsModalOpen({ ...isModalOpen, visible: false })\n                    }\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    //style={{ backgroundColor: \"blue\" }}\n                    className={`ml-4 bg-blue-500 `}\n                    type=\"primary\"\n                    //disabled={login_load}\n                    htmlType=\"submit\"\n                  >\n                    Request\n                  </Button>\n                </Form.Item>\n              </Form>\n            </Modal>\n            <motion.h1\n              initial={{ opacity: 0, translateY: -20 }}\n              animate={{\n                opacity: 1,\n                translateY: 0,\n                transition: { duration: 0.5, delay: 0.5 * delay + 0.3 },\n              }}\n              className=\"text-lg border-b pb-2 border-slate-300 flex items-center gap-2 ml-2  flex-row font-pop font-semibold text-indigo-600\"\n            >\n              <PhoneArrowDownLeftIcon className=\"w-5\" />\n              <h1>Contact</h1>\n            </motion.h1>\n            <div>\n              <motion.div\n                onClick={() => {\n                  setNav({ from: \"/\", to: \"contact\" });\n                  navigate(\"/\" + \"contact\");\n                }}\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1, transition: { duration: 0.5 } }}\n                exit={{ opacity: 0, transition: { duration: 0.5 } }}\n                key={`exp.card.btn`}\n                className=\"rounded-full h-8 font-pop text-center border font-semibold w-24 text-sm px-2 py-1 text-slate-800 bg-gradient-to-br from-slate-50 to-slate-200 hover:to-slate-300\"\n              >\n                More\n              </motion.div>\n            </div>\n          </div>\n\n          <motion.div className=\"flex flex-col w-full md:flex-row justify-between h-full\">\n            <div className=\"flex flex-col  md:group-hover:flex-row items-start w-full gap-2\">\n              <motion.div\n                layoutId=\"contact.card.user\"\n                onClick={() =>\n                  setIsModalOpen({ ...isModalOpen, visible: true })\n                }\n                initial={{ opacity: 0, translateY: -20 }}\n                animate={{\n                  opacity: 1,\n                  translateY: 0,\n                  transition: { duration: 0.5, delay: 0.5 * delay + 0.7 },\n                }}\n                className=\"flex flex-row hover:bg-indigo-100 transition-all group-hover:h-full group-hover:justify-center group-hover:flex-col gap-2 items-center bg-white cursor-pointer hover:shadow-lg border border-slate-300 p-2 rounded-lg shadow-sm w-full\"\n              >\n                <UsersIcon className=\"w-5 md:group-hover:w-16 text-indigo-400\" />\n                <h1 className=\"text-xs font-normal font-mont\">\n                  One-to-One meeting with faculty\n                </h1>\n              </motion.div>\n              <motion.div\n                initial={{ opacity: 0, translateY: -20 }}\n                animate={{\n                  opacity: 1,\n                  translateY: 0,\n                  transition: { duration: 0.5, delay: 0.5 * delay + 0.7 },\n                }}\n                onClick={() => window.open(\"tel:+917923952136\")}\n                className=\"flex flex-row hover:bg-indigo-100 transition-all group-hover:h-full group-hover:justify-center group-hover:flex-col gap-2 items-center bg-white cursor-pointer hover:shadow-lg border border-slate-300 p-2 rounded-lg shadow-sm w-full\"\n              >\n                <PhoneIcon className=\"w-5 md:group-hover:w-16 text-indigo-400\" />\n                <h1 className=\"text-xs font-normal font-mont\">\n                  +91 7923952136\n                </h1>\n              </motion.div>\n              <motion.div\n                onClick={() =>\n                  window.open(\"mailto:industryconnect@iitgn.ac.in\")\n                }\n                initial={{ opacity: 0, translateY: -20 }}\n                animate={{\n                  opacity: 1,\n                  translateY: 0,\n                  transition: { duration: 0.5, delay: 0.5 * delay + 0.7 },\n                }}\n                className=\"flex flex-row hover:bg-indigo-100 transition-all group-hover:h-full  group-hover:justify-center group-hover:flex-col gap-2 items-center bg-white cursor-pointer hover:shadow-lg border border-slate-300 p-2 rounded-lg shadow-sm w-full\"\n              >\n                <EnvelopeIcon className=\"w-5 md:group-hover:w-16 text-indigo-400\" />\n                <h1 className=\"text-xs font-normal font-mont\">\n                  industryconnect @iitgn.ac.in\n                </h1>\n              </motion.div>\n              <motion.div\n                onClick={() =>\n                  window.open(\n                    \"https://docs.google.com/forms/d/e/1FAIpQLSfQp4bK8REhP0ZYBA88kRSSzoCd5jnYBSE8Ui6fUZiMpoa_sQ/viewform\"\n                  )\n                }\n                initial={{ opacity: 0, translateY: -20 }}\n                animate={{\n                  opacity: 1,\n                  translateY: 0,\n                  transition: { duration: 0.5, delay: 0.5 * delay + 0.8 },\n                }}\n                className=\"flex flex-row group-hover:h-full group-hover:justify-center group-hover:flex-col gap-2 cursor-pointer items-center bg-gradient-to-br from-indigo-400 to-indigo-500 transition-all hover:from-indigo-300 hover:to-indigo-400 border border-slate-300 p-2 rounded-lg shadow-sm w-full\"\n              >\n                <PencilSquareIcon className=\"w-5 md:group-hover:w-16 text-white\" />\n                <h1 className=\"text-xs font-normal  group-hover:text-center text-white font-mont\">\n                  CoLab 2024 Registration form\n                </h1>\n              </motion.div>\n            </div>\n          </motion.div>\n        </motion.div>\n      )}\n    </div>\n  );\n}\n\nexport default Contact;\n","export const emails = [\n  { e: \"rupamm.pe.ug@jadavpuruniversity.in\", pw: \"rupanm%@colab.2024\" },\n  { e: \"kavya.gotecha@iitgn.ac.in\", pw: \"kavya!#colab.2024\" },\n  { e: \"shrushtithakkar.02@hotmail.com\", pw: \"thakkar^@colab.2024\" },\n  { e: \"sravanthidulapalli@iitgn.ac.in\", pw: \"sravanthi!^colab.2024\" },\n];\n","import React from \"react\";\nimport Page from \"./Page\";\nimport {\n  Form,\n  Input,\n  Button,\n  Select,\n  Space,\n  Cascader,\n  Card,\n  message,\n  Modal,\n  Checkbox,\n} from \"antd\";\nimport { useState, useEffect } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport {\n  MinusCircleOutlined,\n  PlusOutlined,\n  CloseOutlined,\n} from \"@ant-design/icons\";\nimport { domains } from \"../components/Speakers\";\nimport { transformData } from \"../components/ContactCard\";\nimport { cardVar } from \"./profData\";\nimport {\n  addDoc,\n  collection,\n  doc,\n  setDoc,\n  getDocs,\n  deleteDoc,\n  onSnapshot,\n} from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { cardData } from \"./profData\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { EyeIcon, PencilIcon, TrashIcon } from \"@heroicons/react/24/solid\";\nimport useReducer from \"../hook/reducerHook\";\nimport { emails } from \"../userData\";\nconst SliderDash = ({ data, handleEdit, handleDelete, handleView }) => (\n  <>\n    <div className=\"w-full  h-full overflow-scroll grid border py-2 border-slate-300 text-center gap-2 font-mont px-6 grid-cols-4\">\n      <h1 className=\"font-semibold border-b border-slate-300 pb-2\">No</h1>\n      <h1 className=\"font-semibold border-b border-slate-300 pb-2\">Faculty</h1>\n      <h1 className=\"font-semibold border-b border-slate-300 pb-2\">id</h1>\n      <h1 className=\"font-semibold border-b border-slate-300 pb-2\">Actions</h1>\n      {data?.map((item, index) => (\n        <>\n          <h1 key={`${index}.slider.dash.item.1`} className=\"\">\n            {index}\n          </h1>\n          <h1 key={`${index}.slider.dash.item.2`} className=\"\">\n            {item.data.faculty[1]}\n          </h1>\n          <h1 key={`${index}.slider.dash.item.3`} className=\"\">\n            {item.id}\n          </h1>\n          <h1\n            key={`${index}.slider.dash.item.4`}\n            className=\"flex flex-row justify-center w-full gap-2\"\n          >\n            <EyeIcon\n              onClick={() =>\n                window.confirm(`Do you want to view ${item.id}`) &&\n                handleView(item.id)\n              }\n              className=\"w-5 cursor-pointer hover:text-green-300 text-green-400\"\n            />\n            <PencilIcon\n              onClick={() =>\n                window.confirm(`Do you want to edit ${item.id}`) &&\n                handleEdit(item.id)\n              }\n              className=\"w-5 cursor-pointer hover:text-blue-300 text-blue-400\"\n            />\n            <TrashIcon\n              onClick={() =>\n                window.confirm(`Do you want to delete ${item.id}`) &&\n                handleDelete(item.id)\n              }\n              className=\"w-5 cursor-pointer hover:text-red-300 text-red-400\"\n            />\n          </h1>\n        </>\n      ))}\n    </div>\n    <Link\n      to=\"/addslide\"\n      className=\"py-2 font-mont px-6 mx-auto bg-gradient-to-br from-green-400 to-green-500 hover:to-green-600 text-white rounded-full\"\n    >\n      Add\n    </Link>\n  </>\n);\nfunction AddSlide() {\n  const [form] = Form.useForm();\n  const { user, setUser } = useReducer();\n  const [login_load, setLoad] = useState(false);\n  const [open, setOpen] = useState(false);\n  const navigate = useNavigate();\n  const [slides, setSlides] = useState([]);\n  useEffect(() => {\n    onSnapshot(collection(db, \"slides\"), (querySnapshot) => {\n      setSlides(\n        querySnapshot.docs.map((doc) => ({ data: doc.data(), id: doc.id }))\n      );\n    });\n  }, []);\n  const [dash, setDash] = useState(\n    useLocation().pathname.split(\"/\").pop() === \"dash\"\n  );\n  const Data = transformData(cardVar);\n  const [edit, setEdit] = useState({ edit: false, data: null });\n  const handleView = (id) => {\n    navigate(`/slidedeck/${id}`);\n  };\n  const handleEdit = (id) => {\n    setEdit({ edit: true, data: slides.find((item) => item.id === id) });\n    setDash(false);\n  };\n  const handleDelete = (id) => {\n    deleteDoc(doc(db, \"slides\", id)).then(() => {\n      message.success(\"Slide Deleted\");\n      setSlides(slides.filter((item) => item.id !== id));\n    });\n  };\n\n  const onLogin = (values) => {\n    setLoad(true);\n    const email = emails.find(\n      (email) => email.e === values.username && email.pw === values.password\n    );\n    if (email) {\n      console.log(\"Success:\", email);\n      setUser({ role: \"user\", email: email.e });\n      setOpen(false);\n      setLoad(false);\n    } else {\n      message.error(\"Invalid Credentials\");\n      setLoad(false);\n    }\n  };\n  const onLoginFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n    setLoad(false);\n  };\n  const [value, setValue] = useState(\"\");\n  const modules = {\n    toolbar: [[\"link\"]],\n  };\n  useEffect(() => {\n    // edit.edit && setOpen(true);\n    console.log(edit);\n    edit.edit && form.setFieldsValue(edit.data.data);\n    edit.edit && setValue(edit.data.data.images);\n    // edit.edit && setHover(edit.data.hover);\n  }, [edit]);\n\n  const onFinish = (values) => {\n    edit?.edit\n      ? setDoc(doc(db, \"slides\", edit.data.id), { ...values, images: value })\n          .then(() => {\n            message.success(\"Slide Edited\");\n            form.setFieldsValue({\n              projects: [{}],\n              app: [{}],\n              domains: [{}],\n              sect: [{}],\n              obj: \"\",\n              title: \"\",\n            });\n            setValue(\"\");\n            setDash(true);\n          })\n          .catch((e) => console.log(e))\n      : addDoc(collection(db, \"slides\"), { ...values, images: value }).then(\n          () => {\n            message.success(\"Slide Added\");\n            form.setFieldsValue({\n              projects: [{}],\n              app: [{}],\n              domains: [{}],\n              sect: [{}],\n              obj: \"\",\n              title: \"\",\n            });\n            setValue(\"\");\n            navigate(\"/addslide/dash\");\n          }\n        );\n  };\n  const onFinishFailed = (errorInfo) => {\n    navigate(\"/addslide/dash\");\n    setDash(true);\n  };\n  return (\n    <Page\n      page=\"themes\"\n      title={dash ? \"Slides Dashboard\" : \"Add Slide\"}\n      hideBreadcrumb\n    >\n      <Modal\n        title=\"Login\"\n        open={open}\n        onCancel={() => setOpen(false)}\n        okButtonProps={{ hidden: true }}\n        cancelButtonProps={{ hidden: true }}\n      >\n        <Form\n          name=\"basic\"\n          labelCol={{\n            span: 8,\n          }}\n          wrapperCol={{\n            span: 16,\n          }}\n          style={{\n            maxWidth: 600,\n          }}\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={onLogin}\n          onFinishFailed={onLoginFailed}\n          autoComplete=\"off\"\n        >\n          <Form.Item\n            label=\"Username\"\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your username!\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your password!\",\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item\n            name=\"remember\"\n            valuePropName=\"checked\"\n            wrapperCol={{\n              offset: 8,\n              span: 16,\n            }}\n          >\n            <Checkbox>Remember me</Checkbox>\n          </Form.Item>\n\n          <Form.Item\n            wrapperCol={{\n              offset: 8,\n              span: 16,\n            }}\n          >\n            <Button onClick={() => setOpen(false)}>Cancel</Button>\n            <Button\n              //style={{ backgroundColor: \"blue\" }}\n              className={`ml-4 font-pop bg-blue-500 ${\n                login_load && \"bg-slate-400\"\n              }`}\n              type=\"primary\"\n              disabled={login_load}\n              htmlType=\"submit\"\n            >\n              Login\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n      {user?.role === \"admin\" || user?.role === \"user\" ? (\n        <>\n          {!dash ? (\n            <div className=\"flex flex-col font-mont items-center h-full overflow-scroll w-[90%]\">\n              <Form\n                form={form}\n                name=\"basic\"\n                labelCol={{\n                  span: 8,\n                }}\n                wrapperCol={{\n                  span: 16,\n                }}\n                initialValues={{\n                  projects: [{}],\n                }}\n                className=\"w-full mx-auto\"\n                // initialValues={edit?.edit ? edit.data : null}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                autoComplete=\"off\"\n              >\n                <Form.Item\n                  label=\"Title\"\n                  name=\"title\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input your username!\",\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item\n                  label=\"Faculty\"\n                  name=\"faculty\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input your email!\",\n                    },\n                  ]}\n                >\n                  <Cascader options={Data} />\n                </Form.Item>\n                <Form.Item name=\"obj\" label=\"Objective\">\n                  <Input.TextArea />\n                </Form.Item>\n                <Form.Item label=\"Approaches Used\">\n                  <Form.List name=\"app\">\n                    {(fields, { add, remove }) => (\n                      <>\n                        {fields.map(({ key, name, ...restField }) => (\n                          <div className=\"flex flex-row items-center gap-2\">\n                            <Form.Item\n                              {...restField}\n                              className=\"w-full\"\n                              name={[name, \"data\"]}\n                              rules={[\n                                {\n                                  required: true,\n                                  message: \"Missing first name\",\n                                },\n                              ]}\n                            >\n                              <Input.TextArea className=\"w-full\" />\n                              {/* <Input placeholder=\"First Name\" /> */}\n                            </Form.Item>\n\n                            <MinusCircleOutlined\n                              className=\"mb-auto mt-4 text-red-600\"\n                              onClick={() => remove(name)}\n                            />\n                          </div>\n                        ))}\n                        <Form.Item>\n                          <Button\n                            type=\"dashed\"\n                            onClick={() => add()}\n                            block\n                            icon={<PlusOutlined />}\n                          >\n                            Add\n                          </Button>\n                        </Form.Item>\n                      </>\n                    )}\n                  </Form.List>\n                </Form.Item>\n                <Form.Item label=\"Domains\">\n                  <Form.List name=\"domains\">\n                    {(fields, { add, remove }) => (\n                      <>\n                        {fields.map(({ key, name, ...restField }) => (\n                          <div className=\"flex flex-row items-center gap-2\">\n                            <Form.Item\n                              {...restField}\n                              className=\"w-full\"\n                              name={[name, \"data\"]}\n                              rules={[\n                                {\n                                  required: true,\n                                  message: \"Missing first name\",\n                                },\n                              ]}\n                            >\n                              <Select\n                                className=\"w-full \"\n                                // style={{\n                                //   width: 120,\n                                // }}\n                                options={domains.map((item, index) => ({\n                                  key: index,\n                                  value: item,\n                                }))}\n                              />\n                              {/* <Input placeholder=\"First Name\" /> */}\n                            </Form.Item>\n\n                            <MinusCircleOutlined\n                              className=\"mb-auto mt-2 text-red-600\"\n                              onClick={() => remove(name)}\n                            />\n                          </div>\n                        ))}\n                        <Form.Item>\n                          <Button\n                            type=\"dashed\"\n                            onClick={() => add()}\n                            block\n                            icon={<PlusOutlined />}\n                          >\n                            Add\n                          </Button>\n                        </Form.Item>\n                      </>\n                    )}\n                  </Form.List>\n                </Form.Item>\n                <Form.Item label=\"Key Sectors\">\n                  <Form.List name=\"sect\">\n                    {(fields, { add, remove }) => (\n                      <>\n                        {fields.map(({ key, name, ...restField }) => (\n                          <div className=\"flex flex-row items-center gap-2\">\n                            <Form.Item\n                              {...restField}\n                              className=\"w-full\"\n                              name={[name, \"data\"]}\n                              rules={[\n                                {\n                                  required: true,\n                                  message: \"Missing first name\",\n                                },\n                              ]}\n                            >\n                              <Input className=\"w-full\" />\n                              {/* <Input placeholder=\"First Name\" /> */}\n                            </Form.Item>\n\n                            <MinusCircleOutlined\n                              className=\"mb-auto mt-4 text-red-600\"\n                              onClick={() => remove(name)}\n                            />\n                          </div>\n                        ))}\n                        <Form.Item>\n                          <Button\n                            type=\"dashed\"\n                            onClick={() => add()}\n                            block\n                            icon={<PlusOutlined />}\n                          >\n                            Add\n                          </Button>\n                        </Form.Item>\n                      </>\n                    )}\n                  </Form.List>\n                </Form.Item>\n                <Form.Item label=\"Projects/Publications\">\n                  <Form.List name=\"projects\">\n                    {(fields, { add, remove }) => (\n                      <div className=\"w-full flex flex-col gap-1\">\n                        {fields.map((field) => (\n                          <Card\n                            size=\"small\"\n                            title={`Domain ${field.name + 1}`}\n                            key={field.key}\n                            extra={\n                              <CloseOutlined\n                                onClick={() => {\n                                  remove(field.name);\n                                }}\n                              />\n                            }\n                          >\n                            <Form.Item\n                              label=\"Domain Name\"\n                              name={[field.name, \"domain\"]}\n                            >\n                              <Input />\n                            </Form.Item>\n\n                            {/* Nest Form.List */}\n                            <Form.Item label=\"Project Title\">\n                              <Form.List name={[field.name, \"title\"]}>\n                                {(subFields, subOpt) => (\n                                  <div\n                                    className=\"w-full flex flex-col gap-2\"\n                                    //   style={{\n                                    //     display: \"flex\",\n                                    //     flexDirection: \"column\",\n                                    //     width: \"100%\",\n                                    //     rowGap: 16,\n                                    //   }}\n                                  >\n                                    {subFields.map((subField) => (\n                                      <div\n                                        className=\"flex flex-row gap-1\"\n                                        key={subField.key}\n                                      >\n                                        <Form.Item\n                                          noStyle\n                                          className=\"w-full\"\n                                          name={[subField.name, \"data\"]}\n                                        >\n                                          <Input\n                                            className=\"w-full\"\n                                            placeholder=\"Project Title\"\n                                          />\n                                        </Form.Item>\n\n                                        <CloseOutlined\n                                          onClick={() => {\n                                            subOpt.remove(subField.name);\n                                          }}\n                                        />\n                                      </div>\n                                    ))}\n                                    <Button\n                                      type=\"dashed\"\n                                      onClick={() => subOpt.add()}\n                                      block\n                                    >\n                                      + Add Project/Publication\n                                    </Button>\n                                  </div>\n                                )}\n                              </Form.List>\n                            </Form.Item>\n                          </Card>\n                        ))}\n\n                        <Button type=\"dashed\" onClick={() => add()} block>\n                          + Add Domain\n                        </Button>\n                      </div>\n                    )}\n                  </Form.List>\n                </Form.Item>\n                <div\n                  className={`ant-row  ant-form-item-row gap-0 css-dev-only-do-not-override-1b0bdye`}\n                >\n                  <h1\n                    className={`ant-col ant-col-8 ant-form-item-label css-dev-only-do-not-override-1b0bdye text-right -ml-4 mr-2 ${\n                      value.length / 1024 > 200 && \"text-red-500\"\n                    }`}\n                  >\n                    Images (Size :{parseInt(value.length / 1024)} kb) :{\" \"}\n                  </h1>\n                  <div className=\"ant-col mb-4 ant-col-16 ant-form-item-control css-dev-only-do-not-override-1b0bdye\">\n                    <ReactQuill\n                      modules={modules}\n                      theme=\"snow\"\n                      value={value}\n                      onChange={setValue}\n                    />\n                  </div>\n                </div>\n                <Form.Item\n                  wrapperCol={{\n                    offset: 8,\n                    span: 16,\n                  }}\n                >\n                  <Button onClick={() => onFinishFailed()}>Cancel</Button>\n                  <Button\n                    //style={{ backgroundColor: \"blue\" }}\n                    className=\"ml-4 bg-blue-500\"\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Form.Item>\n              </Form>\n            </div>\n          ) : (\n            <SliderDash\n              data={slides}\n              handleEdit={handleEdit}\n              handleDelete={handleDelete}\n              handleView={handleView}\n            />\n          )}\n        </>\n      ) : (\n        <div\n          onClick={() => setOpen(true)}\n          className=\"px-6 py-2 cursor-pointer bg-gradient-to-br from-indigo-400 to-indigo-500 hover:to-indigo-600 mx-auto rounded-full text-white\"\n        >\n          Login\n        </div>\n      )}\n    </Page>\n  );\n}\n\nexport default AddSlide;\n"],"names":["transformData","inputArray","map","theme","i","value","label","children","prof","j","concat","name","_ref","delay","ref","useRef","isModalOpen","setIsModalOpen","useState","visible","Data","cardVar","onFinish","values","console","log","addDoc","collection","db","then","message","success","isInView","useInView","once","nav","setNav","useReducer","navigate","useNavigate","_jsx","className","_jsxs","motion","div","initial","opacity","translateY","animate","transition","duration","exit","Modal","title","open","onCancel","okButtonProps","hidden","cancelButtonProps","Form","labelCol","span","wrapperCol","style","maxWidth","initialValues","remember","onFinishFailed","autoComplete","Item","rules","required","Cascader","options","fac","Input","TextArea","offset","Button","onClick","type","htmlType","h1","PhoneArrowDownLeftIcon","from","to","layoutId","UsersIcon","window","PhoneIcon","EnvelopeIcon","PencilSquareIcon","emails","e","pw","SliderDash","data","handleEdit","handleDelete","handleView","_Fragment","item","index","faculty","id","EyeIcon","confirm","PencilIcon","TrashIcon","Link","form","useForm","user","setUser","login_load","setLoad","setOpen","slides","setSlides","useEffect","onSnapshot","querySnapshot","docs","doc","dash","setDash","useLocation","pathname","split","pop","edit","setEdit","setValue","setFieldsValue","images","errorInfo","Page","page","hideBreadcrumb","email","find","username","password","role","error","Password","valuePropName","Checkbox","disabled","deleteDoc","filter","projects","setDoc","app","domains","sect","obj","catch","List","fields","_ref2","add","remove","_ref3","key","restField","MinusCircleOutlined","block","icon","PlusOutlined","_ref4","_ref5","Select","_ref6","_ref7","_ref8","field","Card","size","extra","CloseOutlined","subFields","subOpt","subField","noStyle","placeholder","length","parseInt","ReactQuill","modules","toolbar","onChange"],"sourceRoot":""}